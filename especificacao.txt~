VocÃª deve implementar um programa, na linguagem C, que seja capaz de 
armazenar e tratar operaÃ§Ãµes, de maneira eficiente, em uma coleÃ§Ã£o de 
conjuntos de nÃºmeros inteiros.

O programa deve ler da entrada padrÃ£o a listagem das operaÃ§Ãµes a serem
realizadas sobre a coleÃ§Ã£o de conjuntos. A cada operaÃ§Ã£o lida da 
entrada padrÃ£o o programa deve gerar na saÃ­da padrÃ£o a resposta 
correspondente. Por exemplo, o programa deve ser executado por:

  $ programa < arq_com_as_operacoes.txt > arq_de_saida.txt

O arquivo de entrada Ã© dividido em linhas e os componentes de cada
linha sÃ£o separados por espaÃ§os em branco. A estrutura do arquivo Ã©
dada por:
  - A primeira linha do arquivo contÃ©m um nÃºmero inteiro K indicando o
    valor do maior elemento que pode aparecer nos conjuntos;
  - Cada linha seguinte contÃ©m uma operaÃ§Ã£o que deve ser realizada
    sobre a coleÃ§Ã£o de conjuntos armazenada, onde cada linha tem os 
    seguintes componentes separados por espaÃ§o:
      - A linha inicia com um caracter que indica o tipo da operaÃ§Ã£o
        que deve ser realizada: '+', '-', '=', '*', '/', '<' e '>';
      - ApÃ³s o tipo vem a descriÃ§Ã£o de um conjunto, que Ã© dada por:
          - Um nÃºmero inteiro positivo N que indica o tamanho do 
            conjunto envolvido na operaÃ§Ã£o. O tamanho do conjunto Ã© 
            menor ou igual a K;
          - ApÃ³s o tamanho vem uma sequÃªncia ordenada de N nÃºmeros
            inteiros positivos que sÃ£o os elementos do conjunto
            envolvido na operaÃ§Ã£o. Os elementos do conjunto sÃ£o 
            nÃºmeros inteiros do intervalo [1..K];
      - No caso do operador '*' o restante da linha pode ser vazio.
        Caso haja a descriÃ§Ã£o de um conjunto apÃ³s o '*', este deve ser
        ignorado;
  - Uma linha com o nÃºmero 0 (zero) termina a listagem de operaÃ§Ãµes e 
    encerra o arquivo de entrada.

As operaÃ§Ãµes sobre a coleÃ§Ã£o de conjuntos sÃ£o:
  '+' O conjunto envolvido na operaÃ§Ã£o deve ser incluÃ­do na coleÃ§Ã£o.
      Caso a inclusÃ£o nÃ£o seja possÃ­vel o programa deve gerar como
      saÃ­da duas linhas, uma contendo o caracter 'E', indicando erro,
      e outra com 0, indicando o final da resposta da operaÃ§Ã£o. Caso
      a inclusÃ£o seja bem sucedida apenas a linha com 0 deve ser
      gerada como saÃ­da;
  '-' O conjunto envolvido na operaÃ§Ã£o deve ser removido da coleÃ§Ã£o. 
      Caso a operaÃ§Ã£o seja bem sucedida a saÃ­da deve conter apenas
      uma linha com 0. Caso contrÃ¡rio, duas linhas devem ser geradas, 
      uma com o caracter 'E' e outra com 0;
  '=' Esta operaÃ§Ã£o deve verificar se o conjunto envolvido estÃ¡ na 
      coleÃ§Ã£o. Caso a operaÃ§Ã£o seja bem sucedida a saÃ­da deve conter 
      apenas uma linha com 0. Caso contrÃ¡rio, duas linhas devem ser 
      geradas, uma com o caracter 'E' e outra com 0;
  '*' Esta operaÃ§Ã£o deve listar todos os conjuntos da coleÃ§Ã£o. A
      lista de conjuntos gerada deve estar ordenada de forma 
      crescente pelo tamanho dos conjuntos. Conjuntos com o mesmo 
      tamanho devem estar ordenados lexocograficamente, por exemplo,
      o conjunto "2 12 1340" deve vir antes do conjunto "2 12 4000".
      A saÃ­da deve ter cada conjunto em uma linha, terminando com uma 
      linha com 0. Caso a lista seja vazia, apenas a linha com 0 deve 
      ser gerada; 
  '/' Esta operaÃ§Ã£o deve remover da coleÃ§Ã£o todos os conjuntos que
      sÃ£o superconjuntos prÃ³prios do conjunto envolvido na operaÃ§Ã£o. 
      Caso algum conjunto seja removido, a operaÃ§Ã£o Ã© considerada
      bem sucedida e a saÃ­da deve conter apenas uma linha com 0. Caso 
      contrÃ¡rio, duas linhas devem ser geradas, uma com o caracter
      'E' e outra com 0;
  '<' Esta operaÃ§Ã£o deve listar todos os conjuntos da coleÃ§Ã£o que sÃ£o 
      subconjuntos prÃ³prios do conjunto envolvido na operaÃ§Ã£o. A 
      saÃ­da deve ter cada conjunto em uma linha, seguida de uma linha
      com 0. Os conjuntos devem ser listados na ordem crescente de 
      seus tamanhos, sendo que os conjuntos com o mesmo tamanho devem 
      estar ordenados de forma lexicogrÃ¡fica. Caso a lista seja 
      vazia, apenas a linha com 0 deve ser gerada; 
  '>' Esta operaÃ§Ã£o deve listar todos os conjuntos da coleÃ§Ã£o que sÃ£o 
      superconjuntos prÃ³prios do conjunto envolvido na operaÃ§Ã£o. A 
      saÃ­da deve ter cada conjunto em uma linha, seguida de uma linha
      com 0. Os conjuntos devem ser listados na ordem crescente de 
      seus tamanhos, sendo que os conjuntos com o mesmo tamanho devem 
      estar ordenados de forma lexicogrÃ¡fica. Caso a lista seja 
      vazia, apenas a linha com 0 deve ser gerada. 

Considere o seguinte exemplo de arquivo de entrada:

5000
+ 3 12 1340 4455
+ 2 12 4000
+ 2 12 4000
+ 3 666 1122 1340
- 1 666
= 1 666
- 3 666 1122 1340
< 4 12 1340 4000 4455
> 1 666
> 2 12 4000
> 2 12 1340
0

A saÃ­da correspondente para esta entrada deve ser:

0
0
E
0
0
E
0
E
0
0
2 12 4000
3 12 1340 4455
0
0
